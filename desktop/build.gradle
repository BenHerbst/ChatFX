/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
	id "org.jetbrains.kotlin.jvm" version "1.6.10"
	id 'application'
	id 'org.openjfx.javafxplugin' version '0.0.8'
}

repositories {
    jcenter()
	maven {
		url = uri("https://oss.sonatype.org/content/repositories/snapshots")
	}
}

dependencies {
	implementation("no.tornado:tornadofx:2.0.0-SNAPSHOT")
	// https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib
	implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.6.10'
	// Use JUnit test framework.
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
	implementation project(":core")	
}

application {
	mainClass = "org.chatfx.desktop.Main"
}

javafx {
	version = "17"
	modules = [ 'javafx.controls' ]
}

sourceSets {
	main.kotlin.srcDirs += 'src/main/kotlin'
	main.java.srcDirs += 'src/main/java'
}